

                                                        CSE-506 (Spring 2018) Homework Assignment #1
		                                          (100 points, 16% of your overall grade)
	                                                         Version 5b (2/25/2018)
		                                              Due Thursday 3/1/2018 @ 11:59pm




Created a Linux kernel module that, when loaded into Linux, will support a new system call called

xdedup <-npd> infile1 infile2 <outfile>

where "infile1" and "infile2" are the input files to deduplicate.
If the two files have identical content, then infile2 is deleted and it is hard-linked it to infile1: this'll deduplicate the two files by merging them into one.


Files:

1.xdedup.c
This is the user level module, here the following validations are being checked :
     1) Both input files exists.
     2) Both input files can be opened in readonly mode for reading.
     3) If the output file is existing one the it can be opened in write only mode for editing.
     4) The n p d flags are handled using the concept of bit flag with hex decimal numbers.
     5) If n ann p flags are given then we give precedence to n flag this condition is being executed here.    
      
the file names and flags are warped in a struct named "sdata" and are being sent in the void* pointer in the syscall

2.sys_xdedup.c
In this file the syscall is being executed where the file is being validated and parsed in pages/block.
Here the struct is unpacked and the filenames are retived.
validations :
     1) input file length are being checked
     2) symlink for the output file is validated.
     3) the debug messages are printed
     4) error handling when file is not there and when already two hardlinked files are given as the input files.
     5) first the case where n flag is given it returns the numbuer of bytes that are common that is the file size
     6) next we handle the case with only p flag where we first write the data into another temp_output and on successfully completion then we rename this file to the poutputfile and unlink the previous output file.
     7) then we handle the actually do the dedup where there is no n and p flags where first a temp file of the file2 is created and then a look up is created in the parent dircetory of the file2 and the we link the look up and then unlink the renamed tempfile.



References :

1) https://elixir.bootlin.com/
2) http://lxr.fsl.cs.sunysb.edu
 
